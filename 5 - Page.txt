import numpy as np

def page_rank(graph, num_iterations=100, d=0.85):

    # Initialize variables
    num_nodes = len(graph)
    ranks = {node: 1 / num_nodes for node in graph}
    
    for i in range(num_iterations):
        new_ranks = {}
        for node in graph:
            rank_sum = 0
            # Sum the rank contributions from nodes linking to the current node
            for neighbor in graph:
                if node in graph[neighbor]:
                    rank_sum += ranks[neighbor] / len(graph[neighbor])
            # Apply damping factor
            new_ranks[node] = (1 - d) / num_nodes + d * rank_sum
        
        # Update ranks with new values
        ranks = new_ranks
    
    return ranks

# Example graph structure
graph = {
    "A": ["B", "C"],
    "B": ["C"],
    "C": ["A"],
    "D": ["C"]
}

# Run PageRank
page_ranks = page_rank(graph)
print("PageRank scores:", page_ranks)