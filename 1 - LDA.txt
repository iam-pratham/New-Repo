import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis 
from sklearn.metrics import accuracy_score, classification_report
from sklearn import datasets
import matplotlib.pyplot as plt


iris=datasets.load_iris()


df = pd.DataFrame(data=iris['data'], columns=iris['feature_names'])


df['target'] = iris['target']


df['species'] = pd.Categorical.from_codes(iris['target'], iris['target_names'])


df.head()


X = df.drop(["species", "target"], axis=1)  # Drop both 'species' and 'target' columns from X
y = df["species"]


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)


lda = LinearDiscriminantAnalysis()
lda.fit(X_train, y_train)


y_pred = lda.predict(X_test)


accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy * 100}%")
print("\nClassification Report:\n", classification_report(y_test, y_pred))


X_lda = lda.transform(X)
plt.figure(figsize=(8, 6))
for species in y.unique():
    plt.scatter(X_lda[y == species, 0], X_lda[y == species, 1], label=species)
plt.xlabel("LDA Component 1")
plt.ylabel("LDA Component 2")
plt.title("LDA Projection of Iris Dataset")
plt.legend()
plt.grid()
plt.show()


new = pd.DataFrame([[5.1, 3.5, 1.4, 0.2]], columns=X.columns)


prediction = lda.predict(new)
print(f"Predicted class for the new observation: {prediction[0]}")